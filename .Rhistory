library("ggplot2")
library("segmented")
library("plotrix")
library("gridExtra")
library("LoLinR")
library("lubridate")
library("chron")
library('plyr')
library('dplyr')
library('tidyverse')
library('stringr')
library('Rmisc')
library('janitor')
library('readxl')
run15<- read.csv("Respirometry/Data/Runs/20230619/20230619_run_15.csv" , header = TRUE, skip = 1)
setwd("/Volumes/Stier_Lab/regeneration_wound_respiration/Respirometry/Scripts")
setwd("/Volumes/Stier_Lab/regeneration_wound_respiration/Respirometry/Scripts")
setwd("/Volumes/Stier_Lab/regeneration_wound_respiration")
run15<- read.csv("Respirometry/Data/Runs/20230619/20230619_run_15.csv" , header = TRUE, skip = 1)
view(run15)
run15_clean<- run15%>%select(Channel, delta_t, Value, Temp)%>%clean_names
view(run15_clean)
channel <- c(1:10)
coral_id<- c(51, 52, 54, 44, 0, 47, 43, 46, 58, 48) #0 is blank
run15_corals<- data.frame(channel, coral_id)
view(run15_corals)
run15_corals<- run15_corals%>%mutate(channel = as.character(channel))
run15_merged<- left_join(run15_clean, run15_corals, by= 'channel')
view(run15_merged)
view(run15_merged)
# Filtering rows based on channel
run_15_1 <- filter(run15_merged, coral_id = 1)
# Filtering rows based on channel
run_15_1 <- filter(run15_merged, coral_id == 1)
view(run_15_1)
# Filtering rows based on channel
run_15_1 <- filter(run15_merged, channel == 1)
view(run_15_1)
# filtering by coral_id
coral_to_filter <- c(51, 52, 54, 44, 0, 47, 43, 46, 58, 48)
filtered_data <- filter(run15_merged, coral_id == id_to_filter)
# filtering by coral_id
id_to_filter <- c(51, 52, 54, 44, 0, 47, 43, 46, 58, 48)
filtered_data <- filter(run15_merged, coral_id == id_to_filter)
filtered_data <- filter(run15_merged, channel == channel_number)
# Assuming 'run15_merged' is your data frame
for (channel_number in 1:10) {
filtered_data <- filter(run15_merged, channel == channel_number)
# Creating a filename based on the channel number
filename <- paste( coral_id, ".csv", sep = "")
# Saving the filtered data as a CSV file
write.csv(filtered_data, filename, row.names = FALSE)
}
# Filtering rows based on coral id
run_15_51 <- filter(run15_merged, coral_id == 51)
view(run_15_51)
filter_function <- function(run15_merged, coral_id, output_folder) {
coral_ids <- unique(data[[coral_id]])
for (coral_id in coral_ids) {
filtered_data <- filter(run15_merged, !!sym(coral_id) == coral_id)
# Creating a filename based on the coral ID
filename <- file.path(output_folder, paste(coral_id, ".csv", sep = ""))
# Saving the filtered data as a CSV file
write.csv(filtered_data, filename, row.names = FALSE)
}
}
filter_function <- function(run15_merged, coral_id, output_folder) {
coral_ids <- unique(data[[coral_id]])
filter_function <- function(run15_merged, coral_id, output_folder)
view(run15_merged)
#assign a coral id to each channel by merging data frames
run15_merged<- left_join(run15_clean, run15_corals, by= 'channel')
filter_function <- function(run15_merged, coral_id, output_folder)
# Assuming 'run15_merged' is your data frame
for (channel_number in 1:10) {
filtered_data <- filter(run15_merged, channel == channel_number)
# Creating a filename based on the channel number
filename <- paste("run_15_", channel_number, ".csv", sep = "")
# Saving the filtered data as a CSV file
write.csv(filtered_data, filename, row.names = FALSE)
}
# Assuming 'run15_merged' is your data frame
for (channel_number in 1:10) {
filtered_data <- filter(run15_merged, channel == channel_number)
# Creating a filename based on the channel number
filename <- paste("run_15_", coral_id, ".csv", sep = "")
# Saving the filtered data as a CSV file
write.csv(filtered_data, filename, row.names = FALSE)
}
run15_merged<- run15_merged%>%mutate(coral_id = as.character(coral_id))
# Assuming 'run15_merged' is your data frame
for (channel_number in 1:10) {
filtered_data <- filter(run15_merged, channel == channel_number)
# Creating a filename based on the channel number
filename <- paste("run_15_", coral_id, ".csv", sep = "")
# Saving the filtered data as a CSV file
write.csv(filtered_data, filename, row.names = FALSE)
}
coral_to_filter<- c(51, 52, 54, 44, 0, 47, 43, 46, 58, 48)
coral_to_filter<- c(51, 52, 54, 44, 0, 47, 43, 46, 58, 48)
# Assuming 'run15_merged' is your data frame
for (coral in coral_to_filter) {
filtered_data <- filter(run15_merged, coral_id == coral_to_filter)
# Creating a filename based on the channel number
filename <- paste("run_15_", channel_number, ".csv", sep = "")
# Saving the filtered data as a CSV file
write.csv(filtered_data, filename, row.names = FALSE)
}
coral_to_filter<- c(51, 52, 54, 44, 0, 47, 43, 46, 58, 48)
# Assuming 'run15_merged' is your data frame
for (coral in coral_to_filter) {
filtered_data <- filter(run15_merged, coral_id == coral_to_filter)
# Creating a filename based on the channel number
filename <- paste("run_15_", coral_to_filter, ".csv", sep = "")
# Saving the filtered data as a CSV file
write.csv(filtered_data, filename, row.names = FALSE)
}
nrow(run15_merged)
tail(run15_clean)
run15_merged<- run15_merged%>%mutate(coral_id = as.character(coral_id))%>%filter(-8251)
run15_merged<- run15_merged%>%mutate(coral_id = as.character(coral_id))%>%filter(!row_number(8251))
coral_to_filter<- c(51, 52, 54, 44, 0, 47, 43, 46, 58, 48)
# Assuming 'run15_merged' is your data frame
for (coral in coral_to_filter) {
filtered_data <- filter(run15_merged, coral_id == coral_to_filter)
# Creating a filename based on the channel number
filename <- paste("run_15_", coral_to_filter, ".csv", sep = "")
# Saving the filtered data as a CSV file
write.csv(filtered_data, filename, row.names = FALSE)
}
tail(run15_merged)
#upload respo data file and skip first row
run15<- read.csv("Respirometry/Data/Runs/20230619/20230619_run_15.csv" , header = TRUE, skip = 1)
view(run15)
#select the columns with data we need (channel, delta_t (time), Value (O2 concentration), Temp)
run15_clean<- run15%>%select(Channel, delta_t, Value, Temp)%>%clean_names
view(run15_clean)
#select the columns with data we need (channel, delta_t (time), Value (O2 concentration), Temp)
run15_clean<- run15%>%select(Channel, delta_t, Value, Temp)%>%clean_names%>%filter(!row_number(8251))
tail(run15_clean)
nrow(run15_clean)
#select the columns with data we need (channel, delta_t (time), Value (O2 concentration), Temp)
run15_clean<- run15%>%select(Channel, delta_t, Value, Temp)%>%clean_names%>%filter(!row_number(8251))
view(run15_clean)
#select the columns with data we need (channel, delta_t (time), Value (O2 concentration), Temp)
run15_clean<- run15%>%select(Channel, delta_t, Value, Temp)%>%clean_names
view(run15_clean)
nrow(run15_clean)
tail(run15_clean)
#select the columns with data we need (channel, delta_t (time), Value (O2 concentration), Temp)
run15_clean<- run15%>%select(Channel, delta_t, Value, Temp)%>%clean_names%>%filter(!row_number(8251) %in% c(1:4))
view(run15_clean)
run15_clean<- run15%>%select(Channel, delta_t, Value, Temp)%>%clean_names
#select the columns with data we need (channel, delta_t (time), Value (O2 concentration), Temp)
run15_clean<- run15%>%select(Channel, delta_t, Value, Temp)%>%clean_names%>%filter(row_number() <= n()-1)
view(run15_clean)
nrow(run15_clean)
tail(run15_clean)
#create data frame associating channels with coral id's for this run (coral ids recorded on trial datasheets)
channel <- c(1:10)
coral_id<- c(51, 52, 54, 44, 0, 47, 43, 46, 58, 48) #0 is blank
run15_corals<- data.frame(channel, coral_id)
view(run15_corals)
#change channel to character values in data frame
run15_corals<- run15_corals%>%mutate(channel = as.character(channel))
#assign a coral id to each channel by merging data frames
run15_merged<- left_join(run15_clean, run15_corals, by= 'channel')
view(run15_merged)
run15_merged<- run15_merged%>%mutate(coral_id = as.character(coral_id))
coral_to_filter<- c(51, 52, 54, 44, 0, 47, 43, 46, 58, 48)
# Assuming 'run15_merged' is your data frame
for (coral in coral_to_filter) {
filtered_data <- filter(run15_merged, coral_id == coral_to_filter)
# Creating a filename based on the channel number
filename <- paste("run_15_", coral_to_filter, ".csv", sep = "")
# Saving the filtered data as a CSV file
write.csv(filtered_data, filename, row.names = FALSE)
}
# Assuming 'run15_merged' is your data frame
for (coral in coral_to_filter) {
filtered_data <- filter(run15_merged, coral_id == coral_id)
# Creating a filename based on the channel number
filename <- paste("run_15_", coral_to_filter, ".csv", sep = "")
# Saving the filtered data as a CSV file
write.csv(filtered_data, filename, row.names = FALSE)
}
coral_to_filter<- c(51, 52, 54, 44, 0, 47, 43, 46, 58, 48)
# Assuming 'run15_merged' is your data frame
for (coral in coral_to_filter) {
filtered_data <- filter(run15_merged, coral_id == coral_id)
# Creating a filename based on the channel number
filename <- paste("run_15_", coral_to_filter, ".csv", sep = "")
# Saving the filtered data as a CSV file
write.csv(filtered_data, filename, row.names = FALSE)
}
coral_id<- c(51, 52, 54, 44, 0, 47, 43, 46, 58, 48)
# Assuming 'run15_merged' is your data frame
for (coral in coral_id) {
filtered_data <- filter(run15_merged, coral_id == coral_id)
# Creating a filename based on the channel number
filename <- paste("run_15_", coral_to_filter, ".csv", sep = "")
# Saving the filtered data as a CSV file
write.csv(filtered_data, filename, row.names = FALSE)
}
# Assuming 'run15_merged' is your data frame
for (coral_id in coral_to_filter) {
filtered_data <- filter(run15_merged, coral_id == coral_id)
# Check if the filtered data frame is not empty
if (!is_empty(filtered_data)) {
# Creating a filename based on the coral ID
filename <- paste("run_15_", coral_id, ".csv", sep = "")
# Saving the filtered data as a CSV file
write.csv(filtered_data, filename, row.names = FALSE)
}
}
# Assuming 'run15_merged' is your data frame
for (coral_id in coral_to_filter) {
filtered_data <- filter(run15_merged, coral_id == coral_id)
# Check if the filtered data frame is not empty
if (!is_empty(filtered_data)) {
# Creating a filename based on the coral ID
filename <- paste(coral_id, ".csv", sep = "")
# Saving the filtered data as a CSV file
write.csv(filtered_data, filename, row.names = FALSE)
}
}
output_directory <- "/Volumes/Stier_Lab/regeneration_wound_respiration/Respirometry/Data/Runs/20230619/Porites"
coral_to_filter<- c(51, 52, 54, 44, 0, 47, 43, 46, 58, 48)
# Assuming 'run15_merged' is your data frame
for (coral_id in coral_to_filter) {
filtered_data <- filter(run15_merged, coral_id == coral_id)
# Check if the filtered data frame is not empty
if (!is_empty(filtered_data)) {
# Creating a filename based on the coral ID
filename <- file.path(output_directory, paste(coral_id, ".csv", sep = ""))
# Saving the filtered data as a CSV file
write.csv(filtered_data, filename, row.names = FALSE)
}
}
