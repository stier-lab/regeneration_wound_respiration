# Extract rows with blank data from respiration data frame
blankrows <- c(1,2)
blank_rates <- Respiration[blankrows, ]%>%
rename(blank_id = coral_id)%>%
select(blank_id, umol.sec)
#read in blank ids to relates blank rate to sample/coral
blank_id<- read.csv("Respirometry/Data/Runs/20230528/Porites/blank_id.csv")
#combine data frames by blank id
blanks<- left_join(blank_id, blank_rates, by = "blank_id")
blanks<- blanks%>%rename(blank_rate = umol.sec)
#remove NAs from resp data frame
Respiration<- na.omit(Respiration)
#combine blank rates with coral rates
Respiration<- left_join(Respiration, blanks, by = "coral_id")
Respiration$umol.sec.corr<-Respiration$umol.sec-Respiration$blank_rate
View(Respiration)
#standardize to intitial coral size
w2<- read.csv("Respirometry/Data/postwound_weight.csv")%>%rename(weight = X2)%>%filter(species == "por")%>%select(coral_id, weight)
Respiration<- left_join(Respiration, w2, by = "coral_id")
Respiration$umol.g.hr <- (Respiration$umol.sec.corr*3600)/Respiration$weight
Respiration<- Respiration%>%
mutate(umol.g.hr = abs(umol.g.hr))%>%
#select(coral_id, treatment, umol.g.hr, weight)%>%
mutate(treatment = as.factor(treatment))
#plot
ggplot(Respiration, aes(x=treatment, y=umol.sec.corr))+
geom_boxplot()+
ylab('Respiration (umol.g.hr)')
Respiration<- left_join(data1, sample.info, by = "coral_id")
#Convert sample/chamber volume to L
Respiration$chamber_vol <- Respiration$chamber_vol/1000 #calculate volume
#Account for chamber volume to convert from umol L-1 s-1 to umol s-1. This standardizes across water volumes (different because of coral size) and removes per Liter
Respiration$umol.sec <- Respiration$umol.L.sec*Respiration$chamber_vol
# Extract rows with blank data from respiration data frame
blankrows <- c(1,2)
blank_rates <- Respiration[blankrows, ]%>%
rename(blank_id = coral_id)%>%
select(blank_id, umol.sec)
#read in blank ids to relates blank rate to sample/coral
blank_id<- read.csv("Respirometry/Data/Runs/20230528/Porites/blank_id.csv")
#combine data frames by blank id
blanks<- left_join(blank_id, blank_rates, by = "blank_id")
blanks<- blanks%>%rename(blank_rate = umol.sec)
#remove NAs from resp data frame
Respiration<- na.omit(Respiration)
#combine blank rates with coral rates
Respiration<- left_join(Respiration, blanks, by = "coral_id")
Respiration$umol.sec.corr<-Respiration$umol.sec-Respiration$blank_rate
View(Respiration)
#standardize to intitial coral size
w2<- read.csv("Respirometry/Data/postwound_weight.csv")%>%rename(weight = X2)%>%filter(species == "por")%>%select(coral_id, weight)
Respiration<- left_join(Respiration, w2, by = "coral_id")
Respiration$umol.g.hr <- (Respiration$umol.sec.corr*3600)
Respiration<- left_join(data1, sample.info, by = "coral_id")
#Convert sample/chamber volume to L
Respiration$chamber_vol <- Respiration$chamber_vol/1000 #calculate volume
#Account for chamber volume to convert from umol L-1 s-1 to umol s-1. This standardizes across water volumes (different because of coral size) and removes per Liter
Respiration$umol.sec <- Respiration$umol.L.sec*Respiration$chamber_vol
# Extract rows with blank data from respiration data frame
blankrows <- c(1,2)
blank_rates <- Respiration[blankrows, ]%>%
rename(blank_id = coral_id)%>%
select(blank_id, umol.sec)
#read in blank ids to relates blank rate to sample/coral
blank_id<- read.csv("Respirometry/Data/Runs/20230528/Porites/blank_id.csv")
#combine data frames by blank id
blanks<- left_join(blank_id, blank_rates, by = "blank_id")
blanks<- blanks%>%rename(blank_rate = umol.sec)
#remove NAs from resp data frame
Respiration<- na.omit(Respiration)
#combine blank rates with coral rates
Respiration<- left_join(Respiration, blanks, by = "coral_id")
Respiration$umol.sec.corr<-Respiration$umol.sec-Respiration$blank_rate
View(Respiration)
#standardize to intitial coral size
w2<- read.csv("Respirometry/Data/postwound_weight.csv")%>%rename(weight = X2)%>%filter(species == "por")%>%select(coral_id, weight)
Respiration<- left_join(Respiration, w2, by = "coral_id")
Respiration$umol.hr <- (Respiration$umol.sec.corr*3600)
#read in R rates
data1<- read.csv("Respirometry/Output/Respiration/20230528/Respiration.csv")%>%select(-X)
#combine sample info with rates by coral id
Respiration<- left_join(data1, sample.info, by = "coral_id")
#Convert sample/chamber volume to L
Respiration$chamber_vol <- Respiration$chamber_vol/1000 #calculate volume
#Account for chamber volume to convert from umol L-1 s-1 to umol s-1. This standardizes across water volumes (different because of coral size) and removes per Liter
Respiration$umol.sec <- Respiration$umol.L.sec*Respiration$chamber_vol
# Extract rows with blank data from respiration data frame
blankrows <- c(1,2)
blank_rates <- Respiration[blankrows, ]%>%
rename(blank_id = coral_id)%>%
select(blank_id, umol.sec)
#read in blank ids to relates blank rate to sample/coral
blank_id<- read.csv("Respirometry/Data/Runs/20230528/Porites/blank_id.csv")
#combine data frames by blank id
blanks<- left_join(blank_id, blank_rates, by = "blank_id")
blanks<- blanks%>%rename(blank_rate = umol.sec)
#remove NAs from resp data frame
Respiration<- na.omit(Respiration)
#combine blank rates with coral rates
Respiration<- left_join(Respiration, blanks, by = "coral_id")
Respiration$umol.sec.corr<-Respiration$umol.sec-Respiration$blank_rate
View(Respiration)
#standardize to intitial coral size
w2<- read.csv("Respirometry/Data/postwound_weight.csv")%>%rename(weight = X2)%>%filter(species == "por")%>%select(coral_id, weight)
Respiration<- left_join(Respiration, w2, by = "coral_id")
Respiration$umol.hr <- (Respiration$umol.sec.corr*3600) #/Respiration$weight
Respiration<- Respiration%>%
mutate(umol.hr = abs(umol.hr))%>%
#select(coral_id, treatment, umol.g.hr, weight)%>%
mutate(treatment = as.factor(treatment))
#plot
ggplot(Respiration, aes(x=treatment, y=umol.hr))+
geom_boxplot()+
ylab('Respiration (umol)')
#buoyant weight conversion to skeletal mass for juvenile POR corals in respirometry experiments may-june 2023
library(tidyverse)
library(janitor)
library(ggplot2)
library(plyr)
library(tidyr)
library(dplyr)
w1<- read.csv("Growth/Data/20230527_initial.csv")
#weight
w1<- read.csv("Growth/Data/20230527_initial.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))
View(w1)
#weight
w1<- read.csv("Growth/Data/20230527_initial.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
rename("initial" == "dry_mass_coral_g")
#weight
w1<- read.csv("Growth/Data/20230527_initial.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
rename("dry_mass_coral_g" == "initial")
#weight
w1<- read.csv("Growth/Data/20230527_initial.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
rename(dry_mass_coral_g == initial)
#weight
w1<- read.csv("Growth/Data/20230527_initial.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
dplyr::rename("dry_mass_coral_g" == initial)
#weight
w1<- read.csv("Growth/Data/20230527_initial.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
dplyr::rename("dry_mass_coral_g" == "initial")
#weight
w1<- read.csv("Growth/Data/20230527_initial.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
rename("dry_mass_coral_g" == "initial")
#weight
w1<- read.csv("Growth/Data/20230527_initial.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
rename("dry_mass_coral_g" = "initial")
#weight
w1<- read.csv("Growth/Data/20230527_initial.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
rename("initial" = "dry_mass_coral_g")
#weight
w1<- read.csv("Growth/Data/20230527_initial.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
rename("initial" == "dry_mass_coral_g")
#buoyant weight conversion to skeletal mass for juvenile POR corals in respirometry experiments may-june 2023
library(tidyverse)
library(janitor)
library(ggplot2)
library(plyr)
library(tidyr)
#weight
w1<- read.csv("Growth/Data/20230527_initial.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
rename("initial" == "dry_mass_coral_g")
#weight
w1<- read.csv("Growth/Data/20230527_initial.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
rename(initial == dry_mass_coral_id)
#weight
w1<- read.csv("Growth/Data/20230527_initial.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
rename(initial == dry_mass_coral_g)
#weight
w1<- read.csv("Growth/Data/20230527_initial.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
rename(dry_mass_coral_g == initial)
#weight
w1<- read.csv("Growth/Data/20230527_initial.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
rename("dry_mass_coral_g" == "initial")
View(w1)
#weight
w1<- read.csv("Growth/Data/20230527_initial.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
rename(initial == dry_mass_coral_g)
#weight
w1<- read.csv("Growth/Data/20230527_initial.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
rename(initial = dry_mass_coral_g)
library(dplyr)
#weight
w1<- read.csv("Growth/Data/20230527_initial.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
rename(initial = dry_mass_coral_g)
#weight
w1<- read.csv("Growth/Data/20230527_initial.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
rename(initial = dry_mass_coral_g)
library(dplyr)
#weight
w1<- read.csv("Growth/Data/20230527_initial.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
rename(initial = dry_mass_coral_g)
View(w1)
#buoyant weight conversion to skeletal mass for juvenile POR corals in respirometry experiments may-june 2023
library(tidyverse)
library(janitor)
library(ggplot2)
library(tidyr)
getwd()
#chamber vol
v1<- read.csv("Growth/Data/20230527_initial.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
mutate(chamber_vol= 650 - vol_coral_cm3)%>%
select(c(coral_id, species, chamber_vol))
View(v1)
write.csv(w1, "Growth/Output/initial_weight.csv")
w2<- read.csv("Growth/Data/20230527_postwound.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
rename("PostWounding_weight" = "dry_mass_coral_g")
w2<- read.csv("Growth/Data/20230527_postwound.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
rename("postwound_weight" = "dry_mass_coral_g")
write.csv(w2, "Growth/Output/postwound_weight.csv")
v2<- read.csv("Growth/Data/20230527_postwound.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
mutate(chamber_vol= 650 - vol_coral_cm3)%>%
select(c(coral_id, species, chamber_vol))
w3<- read.csv("Growth/Data/20230603.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
rename("day7" = "dry_mass_coral_g")
write.csv(w3, "Growth/Output/day7postwound_weight.csv")
v3<- read.csv("Growth/Data/20230603.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
mutate(chamber_vol= 650 - vol_coral_cm3)%>%
select(c(coral_id, species, chamber_vol))
w4<- read.csv("Growth/Data/20230619.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
rename("final" = "dry_mass_coral_g")
write.csv(w4, "Growth/Output/final_weight.csv")
v4<- read.csv("Growth/Data/20230619.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
mutate(chamber_vol= 650 - vol_coral_cm3)%>%
select(c(coral_id, species, chamber_vol))
w1_por<-w1%>%filter(species == "por")
View(w1_por)
w2_por<-w2%>%filter(species == "por")
w3_por<-w3%>%filter(species == "por")
w4_por<-w4%>%filter(species == "por")
View(w4_por)
left_join(w1_por, w2_por, w3_por, w4_por, by "coral_id" & "species" )
left_join(w1_por, w2_por, w3_por, w4_por, by "coral_id", "species" )
select(c(coral_id, species, chamber_vol))
left_join(w1_por, w2_por, w3_por, w4_por, by "coral_id")
left_join(w1_por, w2_por, w3_por, w4_por, by = coral_id)
left_join(w1_por, w2_por, w3_por, w4_por, by = "coral_id")
left_join(w1_por, w2_por, w3_por, w4_por, by = "coral_id") -> por_weights
left_join(w1_por, w2_por, w3_por, w4_por, by = "coral_id" & "species") -> por_weights
list_df<- list(w1_por, w2_por, w3_por, w4_por)
por_weights<-list_df%>%reduce(inner_join, by='coral_id' & "species")
por_weights<-list_df%>%reduce(inner_join, by='coral_id')
View(por_weights)
left_join(w1_por, w2_por, w3_por, w4_por, by = "coral_id" & as.factor("species")) -> por_weights
w1_por<-w1%>%filter(species == "por")%>% select(-species)
w2_por<-w2%>%filter(species == "por")%>% select(-species)
w3_por<-w3%>%filter(species == "por")%>% select(-species)
list_df<- list(w1_por, w2_por, w3_por, w4_por)
por_weights<-list_df%>%reduce(inner_join, by='coral_id')
w1_por<-w1%>%filter(species == "por")
w2_por<-w2%>%filter(species == "por")%>% select(-species)
w3_por<-w3%>%filter(species == "por")%>% select(-species)
w4_por<-w4%>%filter(species == "por")%>% select(-species)
list_df<- list(w1_por, w2_por, w3_por, w4_por)
por_weights<-list_df%>%reduce(inner_join, by='coral_id')
w2<- read.csv("Growth/Data/20230527_postwound.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
select(c(coral_id, species, dry_mass_coral_g))%>%
rename("postwound" = "dry_mass_coral_g")
write.csv(w2, "Growth/Output/postwound_weight.csv")
w1_por<-w1%>%filter(species == "por")
w2_por<-w2%>%filter(species == "por")%>% select(-species)
w3_por<-w3%>%filter(species == "por")%>% select(-species)
w4_por<-w4%>%filter(species == "por")%>% select(-species)
list_df<- list(w1_por, w2_por, w3_por, w4_por)
por_weights<-list_df%>%reduce(inner_join, by='coral_id')
growth_por<-por_weights%>%mutate(growth_g = final - postwound)
View(growth_por)
# calculating growth (final - initial)
growth_por<-por_weights%>%mutate(growth_g = final - postwound)%>%
mutate(g_day = (growth_g/23)) #days of experiment post wounding
#filter sample info by genus
sampinfo<- read.csv("sample_info.csv")%>%
filter(genus == "por")%>%
select(coral_id, treatment)%>%
mutate(treatment = as.factor(treatment))
#standardizing by initial coral weight
full_por<- left_join(growth_por, sampinfo, by = "coral_id")%>%
mutate(growth_g_norm = growth_g / one)%>%
mutate(growth_norm_day = (growth_g_norm/23))
#standardizing by initial coral weight
full_por<- left_join(growth_por, sampinfo, by = "coral_id")%>%
mutate(growth_g_norm = growth_g / initial)%>%
mutate(growth_norm_day = (growth_g_norm/23))
ggplot(full_por)+
geom_boxplot(aes(treatment, growth_norm_day, fill=treatment))
#getting coral volume for respirometry data analysis
v1<- read.csv("Growth/Data/20230527_initial.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
mutate(chamber_vol= 650 - vol_coral_cm3)%>%
select(c(coral_id, species, chamber_vol))
write.csv(v1, "Respirometry/Data/chamber_volumes/initial_vol.csv")
#volume
v2<- read.csv("Growth/Data/20230527_postwound.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
mutate(chamber_vol= 650 - vol_coral_cm3)%>%
select(c(coral_id, species, chamber_vol))
View(v2)
write.csv(v2, "Respirometry/Data/chamber_volumes/postwound_vol.csv")
write.csv(v3, "Respirometry/Data/chamber_volumes/day7postwound_vol.csv")
View(v3)
#volume
v4<- read.csv("Growth/Data/20230619.csv")%>%
mutate(density_stopper = (air_weight_g * 0.9965)/(air_weight_g - fresh_weight_g))%>%
mutate(density_sw = (air_weight_g - salt_weight_g)/ (air_weight_g / density_stopper))%>%
mutate(vol_coral_cm3 = weight_g / (density_aragonite - density_sw))%>%
mutate(dry_mass_coral_g= vol_coral_cm3 * density_aragonite)%>%
mutate(chamber_vol= 650 - vol_coral_cm3)%>%
select(c(coral_id, species, chamber_vol))
View(v4)
write.csv(v4, "Respirometry/Data/chamber_volumes/final_weight.csv")
library(tidyverse)
library(readxl)
library(janitor)
getwd()
calibration<- read.csv('Surface Area/Data/20230712_wax_calibration.csv')%>%clean_names()%>%
mutate(wax_weight_g = postwax_weight_g - prewax_weight_g)%>%
mutate(cal_radius_mm = diameter_mm / 2)%>%
mutate(cal_radius_cm = cal_radius_mm /10)%>%
mutate(height_cm = height_mm / 10)%>%
mutate(CSA_cm2= ((2*3.14*cal_radius_cm*height_cm) + 3.14*(cal_radius_cm)^2)) #curved surface area (CSA) = 2piRH + piR^2 (one area of circle for top of coral)
#upload respo data file and skip first row
run15<- read.csv("Respirometry/Data/Runs/20230619/20230619_run_15.csv" , header = TRUE, skip = 1)
view(run15)
View(run15)
#select the columns with data we need (channel, delta_t (time), Value (O2 concentration), Temp) & remove the last row
run15_clean<- run15%>%select(Channel, delta_t, Value, Temp)%>%clean_names%>%filter(row_number() <= n()-1)
#Respirometry experiments for wounded Porites May/June 2023
library("ggplot2")
library("segmented")
library("plotrix")
library("gridExtra")
library("LoLinR")
install.packages("LoLinR")
#Respirometry experiments for wounded Porites May/June 2023
library("ggplot2")
library("segmented")
library("plotrix")
library("gridExtra")
library("LoLinR")
library("lubridate")
library("chron")
library('plyr')
library('dplyr')
#library('tidyverse')
library('stringr')
library('Rmisc')
library('janitor')
library('readxl')
library('purrr')
#upload respo data file and skip first row
run15<- read.csv("Respirometry/Data/Runs/20230619/20230619_run_15.csv" , header = TRUE, skip = 1)
View(run15)
#select the columns with data we need (channel, delta_t (time), Value (O2 concentration), Temp) & remove the last row
run15_clean<- run15%>%select(Channel, delta_t, Value, Temp)%>%clean_names%>%filter(row_number() <= n()-1)
view(run15_clean)
#repeat for run 16
run16<- read.csv("Respirometry/Data/Runs/20230619/20230619_run_16.csv" , header = TRUE, skip = 1)
view(run16)
#Respirometry experiments for wounded Porites May/June 2023
library("ggplot2")
library("segmented")
library("plotrix")
library("gridExtra")
library("LoLinR")
##################### DATA WRANGLING PORITES RESPO TRIALS####################### #####
#set working directory
setwd("/Volumes/Stier_Lab/regeneration_wound_respiration")
